//**********************************************************************************
// Database Schema and Data Exporter
//
// Extracts the DDLs of all database objects for the chosen database/schema to the
// user-specified directory. In addition, all table data is exported in CSV, XML, or
// XLS file format. Optionally, the generated files can be archived to ZIP, TAR or TGZ format.
//
// For more information about Aqua Open API visit link: http://docs.aquafold.com/ads/18.0/openapi/
//*******************************************************************

//*******************************************************************
// Input parameters.
//*******************************************************************

var server = "";
var database = "";
var schema = "";
var exportFolder = ""
var fieldSeparator = ","; // The field separator.
var textDelimiter = "\""; // Text delimitier for the field in the datafile.
var qualifyWithSchema = true; // Qualify file name with schema.
var dataFileFormat = "csv"; // This variable is for the datafile file format - valid file formats are "csv", "xml" and "xls".
var scriptLineSeparator = "\n";
var scriptQualifyObject = true;
var scriptLeadingQuoteIdentifier = '"'; // Set leading quote identifier string.
var scriptTrailingQuoteIdentifier = '"'; // Set trailing quote identifier string.
var scriptStatementSeparator = "GO";
var archiveType = ""; // The archive type will be used as file extension. Valid options are "tar", "zip" and "tgz".
var archiveFolder = "";
var archiveFilename = "database_schema_and_data_exporter";

var conn = aqua.project.getServerConnection(server);
conn.connect();

if (database != null) {
	conn.changeDatabase(database);
}

if (schema != null) {
	conn.changeSchema(schema);
}

var metadata = conn.getMetadata();
var scriptOptions = conn.getScriptOptions();
setScriptOptions(scriptOptions);

if (isObjectSupported('Sequences', conn)) {
	exportDDLs(metadata.extractSequences(database, schema));
}

if (isObjectSupported('Synonyms', conn)) {
	exportDDLs(metadata.extractSynonyms(database, schema));
}

if (isObjectSupported('Packages', conn)) {
	exportDDLs(metadata.extractPackages(database, schema));
}

if (isObjectSupported('Indexes', conn)) {
	exportDDLs(metadata.extractIndexes(database, schema));
}

if (isObjectSupported('Triggers', conn)) {
	exportDDLs(metadata.extractTriggers(database, schema));
}

if (isObjectSupported('DataTypes', conn)) {
	exportDDLs(metadata.extractDataTypes(database, schema));
}

if (isObjectSupported('Functions', conn)) {
	exportDDLs(metadata.extractFunctions(database, schema));
}

if (isObjectSupported('Procedures', conn)) {
	exportDDLs(metadata.extractProcedures(database, schema));
}

if (isObjectSupported('Views', conn)) {
	exportDDLs(metadata.extractViews(database, schema));
}

if (isObjectSupported('Rules', conn)) {
	exportDDLs(metadata.extractRules(database, schema));
}

if (isObjectSupported('Tables', conn)) {
	exportDDLs(metadata.extractTables(database, schema));
}

if (isObjectSupported('MatViews', conn)) {
	exportDDLs(metadata.extractMatViews(database, schema));
}

if (isObjectSupported('DatabaseLinkes', conn)) {
	exportDDLs(metadata.extractDatabaseLinks(database, schema));
}

if (isObjectSupported('Defaults', conn)) {
	exportDDLs(metadata.extractDefaults(database, schema));
}

if (conn.metadata.isMssql()) {
	exportDDLs(metadata.extractAsymmetricKeys(database));
	exportDDLs(metadata.extractSymmetricKeys(database));
	exportDDLs(metadata.extractCertificates(database));
	exportDDLs(metadata.extractXmlSchemaCollections(database));
	exportDDLs(metadata.extractAssemblies(database));
}

if (conn.metadata.isOracle()) {
	exportDDLs(metadata.extractArrayTypes(database, schema));
	exportDDLs(metadata.extractObjectTypes(database, schema));
	exportDDLs(metadata.extractClusters(database, schema));
	exportDDLs(metadata.extractPackageBodies(database, schema));
	exportDDLs(metadata.extractTableTypes(database, schema));
	exportDDLs(metadata.extractDimensions(database, schema));
	exportDDLs(metadata.extractJavaResources(database, schema));
	exportDDLs(metadata.extractJavaSources(database, schema));
	exportDDLs(metadata.extractQueues(database, schema));
	exportDDLs(metadata.extractRefreshGroups(database, schema));
}

if (isObjectSupported('NickNames', conn)) {
	exportDDLs(metadata.extractNicknames(database, schema));
}

if (isObjectSupported('Segments', conn)) {
	exportDDLs(metadata.extractSegments(database, schema));
}

if (isObjectSupported('Events', conn)) {
	exportDDLs(metadata.extractEvents(database, schema));
}

if (isObjectSupported('Roles', conn)) {
	exportDDLs(metadata.extractRoles(database, schema));
}

if (isObjectSupported('Schemas', conn)) {
	exportDDLs(metadata.extractSchemas(database));
}

if (isObjectSupported('Users', conn)) {
	exportDDLs(metadata.extractUsers(database, schema));
}

dumpTables();
archiveData();

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function exports the table data.
//*******************************************************************
function exportTableData(table, filename) {
	/**
	PLEASE NOTE: If you are using Windows and you have two database objects with
	the same name but different cases, the second object that is extracted will overwrite
	the first one.
	**/

	var file;
	var sheet;
	if (dataFileFormat == "xls") {
		sheet = aqua.data.excelSpreadsheet(filename);
		sheet.clear();
	}
	else {
		file = getFileWriter();
		file.setFile(filename);
	}
	var sqlstmt = "select * from ";
	if (conn.metadata.isTeradata()) {
		if(table.getDatabaseName() != null && table.getDatabaseName().length() > 0) {
			sqlstmt += metadata.getLeadingObjectQuoteIdentifier();
			sqlstmt += table.getDatabaseName();
			sqlstmt += metadata.getTrailingObjectQuoteIdentifier();
			sqlstmt += "."
		}
	}

	if (table.getSchemaName() != null && table.getSchemaName().length() > 0) {
		sqlstmt += metadata.getLeadingObjectQuoteIdentifier();
		sqlstmt += table.getSchemaName();
		if (!conn.metadata.isBigQuery()) {
			sqlstmt += metadata.getTrailingObjectQuoteIdentifier();
		}
		sqlstmt += ".";
	}

	if (server != null && (!conn.metadata.isInformix() && !conn.metadata.isBigQuery())) {
		sqlstmt += metadata.getLeadingObjectQuoteIdentifier();
	}

	sqlstmt += table.getName();

	if (server != null && !conn.metadata.isInformix()) {
		sqlstmt += metadata.getTrailingObjectQuoteIdentifier();
	}

	try {
		aqua.console.println(sqlstmt);
		var resultset = conn.executeQuery(sqlstmt);
		var rowcount = 0;
		var tablenameforprint = "";

		if (table.getDatabaseName() != null && table.getDatabaseName() != "") {
			tablenameforprint += table.getDatabaseName() + ".";
		}

		if (table.getSchemaName() != null && table.getSchemaName() != "") {
			tablenameforprint += table.getSchemaName() + ".";
		}

		if (table.getName() != null && table.getName() != "") {
			tablenameforprint += table.getName();
		}

		if (conn.metadata.isMongoDB()) {
			aqua.console.println("Exporting Collection : " + tablenameforprint);
		}
		else {
			aqua.console.println("Exporting table : " + tablenameforprint);
		}

		if (dataFileFormat == "xls") {
			sheet.insert(resultset.columnStructure);
			sheet.setAutoResize(true);
		}

		while (resultset.next()) {
			var row = "";
			try {
				if (dataFileFormat == "xml") {
					row = resultset.read();
				}
				else {
					row = resultset.getRow();
				}
			}
			catch (e) {
				 row = "(err)";
			}

			if (dataFileFormat == "xls") {
				sheet.insert(row);
			}
			else {
				file.write(row);
			}
			rowcount++;
		}

		aqua.console.println("Row Count: " + rowcount);
		if (dataFileFormat == "xls") {
			if (sheet.getRow() > 1) {
				sheet.save();
			}
		}
		else {
			file.close();
		}
	}
	catch (e) {
		aqua.console.println("*ERROR* - "+e);
		if (e == "JavaException: java.lang.NullPointerException: null" ) {
			if (server != null && conn.metadata.isOracle()) {
				try {
					conn.executeQuery("SELECT 0 FROM DUAL");
				}
				catch (err) {
					if (err == "JavaException: java.sql.SQLException: OALL8 is in an inconsistent state" ) {
						/**
						Oracle has the possibility of having columns with an UNDEFINED data type.
						This causes the jdbc driver to go into an inconsistent state and we need to
						reestablish a new connection.
						**/
						conn.disconnect();
						conn.connect();
						conn.changeDatabase(database);
						conn.changeSchema(schema);
					}
				}
			}
		}

		if (dataFileFormat == "xls") {
			if(sheet.getRow() > 1){
				sheet.save();
			}
		}
		else {
			file.close();
		}
	}
}

//*******************************************************************
// This function exports ddl information.
//*******************************************************************
function exportDDLs(objs) {
	for (var i=0; i<objs.length; i++) {
		var file = aqua.io.newTextWriter();

		/**
		PLEASE NOTE: If you are using Windows and you have two database objects with
		the same name but different cases, the second object that is extracted will overwrite
		the first one.
		**/
		file.setFile(generateDDLFilename(objs[i]));
		try {
			//noinspection : suppresses syntax highlighting warning for the following statement
			file.write(objs[i].scriptCREATEFULL());
			aqua.console.println("Exported DDL for:- Schema Object Type: [" + objs[i].getTypeName() + "]\t Object Name: [" + objs[i].getName() + "]");
		}
		catch(e) {
			try {
				file.write(objs[i].scriptCREATE());
				aqua.console.println("Exported DDL for:- Schema Object Type: [" + objs[i].getTypeName() + "]\t Object Name: [" + objs[i].getName() + "]");
			}
			catch(e) {
				aqua.console.println("["+objs[i].getTypeName() + "] [" + objs[i].getName() +"].scriptCREATE(): "+e);
			}
		}
		file.close();
	}
}

//*******************************************************************
// This function generates the table filename.
//*******************************************************************
function generateTableFilename(table) {
	var dir = exportFolder + "/data/";
	if (aqua.filesystem.exists(dir) == false) {
		aqua.filesystem.createDirectory(dir);
	}

	var filename = "";
	if (table.getDatabaseName() != null && table.getDatabaseName() != "") {
		filename += table.getDatabaseName() + ".";
	}

	if (table.getSchemaName() != null && table.getSchemaName() != "") {
		filename += table.getSchemaName() + ".";
	}

	filename += table.getName() + "." + dataFileFormat;
	return (dir + filename.replace("/",""));
}

//*******************************************************************
// This function generates the ddl filename.
//*******************************************************************
function generateDDLFilename(obj) {
	var dir      = exportFolder + "/DDL/" + obj.getTypeName().replace(" ", "_") + "/";
	var filename = dir;

	if (aqua.filesystem.exists(dir) == false) {
		aqua.filesystem.createDirectory(dir);
	}

	if (obj.getDatabaseName() != null && obj.getDatabaseName() != "") {
		filename += obj.getDatabaseName() + ".";
	}

	if (obj.getSchemaName() != null && obj.getSchemaName() != "") {
		filename += obj.getSchemaName() + ".";
	}

	if (obj.getTypeName() == "Index") {
		//noinspection : suppresses syntax highlighting warning for the following statement
		filename += obj.getTableName() + ".";
	}

	if ((obj.getTypeName() == "Function") || (obj.getTypeName() == "Procedure")) {
		//noinspection : suppresses syntax highlighting warning for the following statement
		filename += obj.getSpecificName();
	}
	else {
		filename += obj.getName().replace("/","");
	}
	filename += ".ddl";
	return filename;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}

//*******************************************************************
// This function sets the script options.
//*******************************************************************
function setScriptOptions(options) {
	if (scriptLineSeparator != null) {
		options.setLineSeparator(scriptLineSeparator);
	}

	if (scriptQualifyObject != null) {
		options.setQualifyObject(scriptQualifyObject);
	}

	if (scriptLeadingQuoteIdentifier != null || scriptTrailingQuoteIdentifier) {
		options.setQuoteIdentifier(scriptLeadingQuoteIdentifier, scriptTrailingQuoteIdentifier);
	}

	if (scriptStatementSeparator != null) {
		options.setStatementSeparator(scriptStatementSeparator);
	}
}

//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported(object, conn) {
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}
//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables2() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter2() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData2() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported2() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}
//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables3() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter3() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData3() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported3() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables4() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter4() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData4() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported4() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables8() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter8() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData8() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported8() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables9() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter9() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData9() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported9() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}
//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables7() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter7() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData7() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported7() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables57() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter57() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData57() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported57() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}
//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables101() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter101() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData101() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported101() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables102() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter102() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData102() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported102() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables103() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter103() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData103() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported103() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables104() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter104() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData104() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported104() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables105() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter105() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData105() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported105() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables106() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter106() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData106() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported106() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables107() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter107() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData107() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported107() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables108() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter108() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData108() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported108() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables109() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter109() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData109() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported109() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables111() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter111() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData111() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported111() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables112() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter112() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData112() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported112() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables113() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter113() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData113() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported113() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables114() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter114() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData114() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported114() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables115() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter115() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData115() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported115() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables116() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter116() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData116() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported116() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables117() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter117() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData117() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported117() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables118() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter118() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData118() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported118() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables119() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 1; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter119() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData119() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported119() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables121() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter121() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData121() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported121() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables122() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter122() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData122() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported122() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables123() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter123() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData123() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported123() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables124() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter124() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData124() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported124() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables125() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter125() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData125() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported125() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables126() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter126() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData126() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported126() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables127() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter127() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData127() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported127() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables128() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter128() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData128() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported128() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables129() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 2; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter129() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData129() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported129() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables131() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter131() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData131() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported131() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables132() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter132() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData132() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported132() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables133() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter133() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData133() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported133() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables134() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter134() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData134() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported134() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables135() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter135() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData135() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported135() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables136() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter136() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData136() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported136() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables137() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter137() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData137() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported137() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables138() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter138() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData138() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported138() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables139() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 3; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter139() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData139() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported139() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables141() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter141() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData141() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported141() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables142() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter142() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData142() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported142() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables143() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter143() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData143() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported143() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables144() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter144() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData144() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported144() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables145() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter145() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData145() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported145() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables146() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter146() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData146() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported146() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables147() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter147() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData147() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported147() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables148() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter148() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData148() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported148() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables149() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 4; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter149() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData149() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported149() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables151() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter151() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData151() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported151() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables152() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter152() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData152() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported152() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables153() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter153() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData153() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported153() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables154() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter154() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData154() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported154() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables155() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter155() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData155() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported155() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables156() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter156() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData156() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported156() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables157() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter157() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData157() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported157() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables158() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter158() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData158() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported158() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables159() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 5; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter159() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData159() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported159() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables161() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter161() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData161() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported161() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables162() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter162() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData162() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported162() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables163() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter163() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData163() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported163() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables164() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter164() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData164() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported164() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables165() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter165() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData165() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported165() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables166() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter166() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData166() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported166() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables167() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter167() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData167() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported167() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables168() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter168() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData168() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported168() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables169() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 6; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter169() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData169() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported169() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables171() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter171() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData171() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported171() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables172() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter172() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData172() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported172() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables173() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter173() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData173() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported173() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables174() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter174() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData174() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported174() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables175() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter175() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData175() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported175() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables176() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter176() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData176() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported176() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables177() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter177() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData177() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported177() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables178() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter178() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData178() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported178() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables179() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 7; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter179() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData179() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported179() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables181() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter181() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData181() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported181() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables182() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter182() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData182() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported182() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables183() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter183() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData183() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported183() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables184() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter184() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData184() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported184() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables185() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter185() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData185() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported185() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables186() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter186() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData186() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported186() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables187() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter187() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData187() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported187() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables188() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter188() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData188() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported188() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables189() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 8; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter189() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData189() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported189() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables191() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter191() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData191() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported191() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables192() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter192() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData192() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported192() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables193() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter193() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData193() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported193() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables194() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter194() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData194() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported194() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables195() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter195() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData195() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported195() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables196() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter196() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData196() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported196() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables197() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter197() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData197() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported197() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables198() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter198() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData198() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported198() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables199() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 9; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter199() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData199() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported199() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1001() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1001() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1001() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1001() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1002() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1002() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1002() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1002() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1003() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1003() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1003() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1003() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1004() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1004() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1004() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1004() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1005() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1005() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1005() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1005() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1006() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1006() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1006() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1006() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1007() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1007() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1007() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1007() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1008() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1008() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1008() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1008() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1009() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1009() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1009() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1009() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1011() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1011() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1011() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1011() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1012() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1012() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1012() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1012() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1013() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1013() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1013() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1013() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1014() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1014() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1014() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1014() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1015() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1015() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1015() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1015() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1016() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1016() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1016() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1016() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1017() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1017() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1017() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1017() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1018() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1018() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1018() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1018() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1019() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1019() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1019() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1019() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1021() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1021() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1021() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1021() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1022() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1022() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1022() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1022() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1023() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1023() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1023() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1023() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1024() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1024() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1024() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1024() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1025() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1025() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1025() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1025() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1026() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1026() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1026() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1026() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1027() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1027() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1027() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1027() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1028() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1028() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1028() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1028() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1029() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1029() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1029() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1029() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1031() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1031() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1031() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1031() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1032() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1032() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1032() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1032() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1033() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1033() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1033() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1033() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1034() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1034() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1034() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1034() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1035() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1035() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1035() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1035() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1036() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1036() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1036() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1036() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1037() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1037() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1037() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1037() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1038() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1038() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1038() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1038() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1039() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1039() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1039() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1039() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1041() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1041() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1041() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1041() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1042() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1042() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1042() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1042() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1043() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1043() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1043() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1043() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1044() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1044() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1044() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1044() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1045() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1045() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1045() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1045() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1046() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1046() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1046() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1046() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1047() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1047() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1047() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1047() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1048() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1048() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1048() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1048() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1049() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1049() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1049() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1049() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1051() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1051() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1051() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1051() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1052() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1052() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1052() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1052() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1053() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1053() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1053() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1053() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1054() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1054() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1054() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1054() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1055() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1055() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1055() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1055() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1056() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1056() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1056() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1056() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1057() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1057() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1057() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1057() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1058() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1058() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1058() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1058() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1059() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1059() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1059() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1059() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1061() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1061() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1061() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1061() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1062() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1062() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1062() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1062() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1063() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1063() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1063() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1063() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1064() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1064() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1064() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1064() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1065() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1065() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1065() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1065() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1066() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1066() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1066() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1066() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1067() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1067() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1067() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1067() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1068() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1068() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1068() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1068() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1069() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1069() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1069() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1069() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}



//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1071() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1071() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1071() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1071() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1072() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1072() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1072() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1072() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1073() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1073() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1073() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1073() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1074() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1074() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1074() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1074() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1075() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1075() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1075() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1075() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1076() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1076() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1076() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1076() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1077() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1077() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1077() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1077() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1078() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1078() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1078() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1078() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1079() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1079() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1079() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1079() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1081() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1081() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1081() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1081() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1082() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1082() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1082() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1082() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1083() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1083() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1083() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1083() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1084() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1084() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1084() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1084() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1085() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1085() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1085() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1085() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1086() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1086() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1086() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1086() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1087() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1087() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1087() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1087() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1088() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1088() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1088() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1088() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1089() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1089() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1089() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1089() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1091() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1091() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1091() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1091() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1092() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1092() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1092() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1092() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1093() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1093() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1093() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1093() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1094() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1094() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1094() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1094() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1095() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1095() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1095() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1095() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1096() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1096() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1096() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1096() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1097() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1097() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1097() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1097() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1098() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1098() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1098() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1098() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1099() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1099() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1099() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1099() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

/*
   101, 101,....191 (0-> +1)
   1001, 1011, 1021,..1211 (middle 00 -> +1 excluding 11 ie. 1111)
   
*/


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1211() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1211() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1211() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1211() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1212() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1212() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1212() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1212() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1213() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1213() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1213() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1213() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1214() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1214() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1214() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1214() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1215() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1215() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1215() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1215() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1216() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1216() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1216() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1216() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1217() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1217() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1217() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1217() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1218() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1218() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1218() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1218() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1219() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1219() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1219() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1219() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

/*
   101, 101,....191 (0-> +1)
   1001, 1011, 1022,..1221 (middle 00 -> +1 excluding 11 ie. 1111)
   
*/


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1221() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1221() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1221() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1221() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1222() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1222() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1222() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1222() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1223() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1223() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1223() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1223() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1224() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1224() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1224() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1224() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1225() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1225() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1225() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1225() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1226() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1226() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1226() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1226() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1227() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1227() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1227() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1227() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1228() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1228() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1228() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1228() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1229() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1229() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1229() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1229() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

/*
   101, 101,....191 (0-> +1)
   1001, 1011, 1023,..1231 (middle 00 -> +1 excluding 11 ie. 1111)
   
*/


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1231() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1231() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1231() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1231() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1232() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1232() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1232() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1232() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1233() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1233() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1233() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1233() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1234() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1234() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1234() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1234() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1235() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1235() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1235() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1235() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1236() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1236() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1236() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1236() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1237() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1237() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1237() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1237() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1238() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1238() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1238() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1238() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1239() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1239() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1239() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1239() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}
/*
   101, 101,....191 (0-> +1)
   1001, 1011, 1024,..1241 (middle 00 -> +1 excluding 11 ie. 1111)
   
*/


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1241() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1241() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1241() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1241() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1242() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1242() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1242() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1242() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1243() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1243() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1243() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1243() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1244() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1244() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1244() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1244() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1245() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1245() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1245() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1245() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1246() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1246() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1246() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1246() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1247() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1247() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1247() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1247() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1248() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1248() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1248() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1248() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1249() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1249() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1249() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1249() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

/*
   101, 101,....191 (0-> +1)
   1001, 1011, 1025,..1251 (middle 00 -> +1 excluding 11 ie. 1111)
   
*/


//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1251() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1251() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1251() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1251() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1252() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1252() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1252() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1252() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1253() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1253() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1253() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1253() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1254() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1254() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1254() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1254() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1255() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1255() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1255() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1255() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1256() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1256() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1256() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1256() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1257() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1257() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1257() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1257() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1258() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1258() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1258() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1258() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}

//*******************************************************************
// This function creates the table data.
//*******************************************************************
function dumpTables1259() {
	var tables = metadata.extractTables(database, schema);
	if (tables != null) {
		for (i = 0; i < tables.length; i++) {
			if (aqua.filesystem.exists(exportFolder) == false) {
				aqua.filesystem.createDirectory(exportFolder);
			}
			exportTableData(tables[i], generateTableFilename(tables[i]));
		}
	}
}

//*******************************************************************
// This function writes data to a file.
//*******************************************************************
function getFileWriter1259() {
	var file;
	if (dataFileFormat == "csv") {
		file = aqua.io.newTextWriter();
		file.setCellDelimiter(fieldSeparator);
		file.setQuoteIdentifier(textDelimiter);
	}
	else if (dataFileFormat == "xml") {
		file = aqua.io.newXmlWriter();
	}
	else {
		throw dataFileFormat + " is an invalid value";
	}
	return file;
}

//*******************************************************************
// This function archives the data.
//*******************************************************************
function archiveData1259() {
	var archiveFile = archiveFolder + "/" + archiveFilename;

	if (archiveType == null || archiveType == "") {
		return;
	}
	else if (archiveType == "zip") {
		archiveFile += "." + archiveType;
		aqua.archive.zip(exportFolder, archiveFile);
	}
	else if (archiveType == "tgz") {
		var tarFile  = archiveFile + ".tar";
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, tarFile);
		aqua.archive.gzip(tarFile, archiveFile);
		aqua.filesystem.deleteFile(tarFile);
	}
	else if (archiveType == "tar") {
		archiveFile += "." + archiveType;
		aqua.archive.tar(exportFolder, archiveFile);
	}
	else {
		throw archiveType + " is an invalid value";
	}
}



//*******************************************************************
// This function tests if an object is supported for a database.
//*******************************************************************
function isObjectSupported1259() {
    var object = 'XXX'
	switch (object) {
		case 'Sequences':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isVertica() ||  conn.metadata.isOracle() || conn.metadata.isSybaseAnywhere()) {
				return true;
			}
			break;

		case 'Synonyms':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isInformix() || conn.metadata.isOracle() || conn.metadata.isApacheDerby() || conn.metadata.isNetezza() ||
					conn.metadata.isHana() || conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'Packages':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle()) {
				return true;
			}
			break;

		case 'Indexes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isHive()) {
				return true;
			}
			break;

		case 'Triggers':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isAzure()) {
				return true;
			}
			break;

		case 'DataTypes':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isRedShift() || conn.metadata.isGreenplum() ||
					conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Functions':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isPostgreSQL() ||
					conn.metadata.isMySQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() ||
					conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isParAccel()) {
				return true;
			}
			break;

		case 'Procedures':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isMySQL() || conn.metadata.isApacheDerby() ||
					conn.metadata.isTeradata() || conn.metadata.isNetezza() || conn.metadata.isVertica() || conn.metadata.isGreenplum() ||
					conn.metadata.isParAccel() || conn.metadata.isVoltDB()) {
				return true;
			}
			break;

		case 'Views':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isGreenplum() || conn.metadata.isRedShift() ||
					conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() || conn.metadata.isHana() ||
					conn.metadata.isVertica() || conn.metadata.isHive() || conn.metadata.isMongoDB() || conn.metadata.isAzure() ||
					conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'Rules':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isPostgreSQL() || conn.metadata.isGreenplum()) {
				return true;
			}
			break;

		case 'Tables':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isMySQL() || conn.metadata.isPostgreSQL() || conn.metadata.isNCluster() ||
					conn.metadata.isApacheDerby() || conn.metadata.isTeradata() || conn.metadata.isRedShift() || conn.metadata.isCassandra() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isVoltDB() || conn.metadata.isSQLite() ||
					conn.metadata.isHana() || conn.metadata.isVertica() || conn.metadata.isHive() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isParAccel() || conn.metadata.isBigQuery()) {
				return true;
			}
			break;

		case 'MatViews':
			if(conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isOracle() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'DatabaseLinks':
			if (conn.metadata.isMssql() || conn.metadata.isOracle() ||  conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Defaults':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'NickNames':
			if (conn.metadata.isDB2()) {
				return true;
			}
			break;

		case 'Segments':
			if (conn.metadata.isSybaseASE()) {
				return true;
			}
			break;

		case 'Events':
			if (conn.metadata.isSybaseIQ() || conn.metadata.isSybaseAnywhere() || conn.metadata.isMySQL()) {
				return true;
			}
			break;

		case 'Roles':
			if (conn.metadata.isSybaseASE() || conn.metadata.isMssql() || conn.metadata.isInformix() || conn.metadata.isHana() ||
					conn.metadata.isMongoDB() || conn.metadata.isAzure() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Schemas':
			if (conn.metadata.isDB2() || conn.metadata.isDB2iSeries() || conn.metadata.isDB2zOS() || conn.metadata.isMssql() ||
					conn.metadata.isOracle() || conn.metadata.isSybaseASE() || conn.metadata.isSybaseAnywhere() || conn.metadata.isSybaseIQ() ||
					conn.metadata.isInformix() || conn.metadata.isPostgreSQL() || conn.metadata.isApacheDerby() || conn.metadata.isTeradata() ||
					conn.metadata.isRedShift() || conn.metadata.isGreenplum() || conn.metadata.isHana() || conn.metadata.isVertica() ||
					conn.metadata.isAzure() || conn.metadata.isNetezza() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		case 'Users':
			if (conn.metadata.isMssql() || conn.metadata.isSybaseASE() || conn.metadata.isInformix() || conn.metadata.isRedShift() ||
					conn.metadata.isGreenplum() || conn.metadata.isNetezza() || conn.metadata.isHana() || conn.metadata.isMongoDB() ||
					conn.metadata.isAzure() || conn.metadata.isPostgreSQL() || conn.metadata.isParAccel() || conn.metadata.isNCluster()) {
				return true;
			}
			break;

		default:
			return false;
	}
	return false;
}


